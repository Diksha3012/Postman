{
	"info": {
		"_postman_id": "58765e21-229e-475f-b74e-215e822d00d4",
		"name": "postman-scripting",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "get user data 2",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.globals.set(\"userid\", 2);"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"//checking status code using snippet\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"pm.response.to.have.status(200);\r",
							"});\r",
							"// creating  multiple assertion in single function\r",
							"pm.test(\"multiple assertion\", function () {\r",
							"responseJson=pm.response.json();\r",
							"pm.expect(responseJson.data.id).to.eql(2);\r",
							"pm.expect(responseJson.data.email).to.eql(\"janet.weaver@reqres.in\");\r",
							"pm.expect(responseJson.data.first_name).to.eql(\"Janet\");\r",
							"pm.expect(responseJson.data.last_name).to.eql(\"Weaver\");\r",
							"\r",
							"});\r",
							"\r",
							"//handling responses that dont parse\r",
							"pm.test(\"Body strings\", function () {\r",
							"pm.expect(pm.response.text()).to.include(\"janet.weaver@reqres.in\");\r",
							"});\r",
							"//checking either one of the status\r",
							"pm.test(\"successful status\", function () {\r",
							"pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
							"});\r",
							"\r",
							"// Testing headers in api\r",
							"pm.test(\"content type header\", function () {\r",
							"pm.response.to.have.header(\"Content-Type\");\r",
							"});\r",
							"\r",
							"//checking content type value\r",
							"pm.test(\"Content-Type header is application/json\", () => {\r",
							"pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json; charset=utf-8');\r",
							"});\r",
							"\r",
							"//checing cookies\r",
							"pm.test(\"Cookie is present\", () => {\r",
							"  pm.expect(pm.cookies.has('Cookie_1')).to.be.true;\r",
							"});\r",
							"\r",
							"pm.test(\"Cookie values\", () => {\r",
							"pm.expect(pm.cookies.get('Cookie_1')).to.eql('value');\r",
							"});\r",
							"\r",
							"\r",
							"//response time\r",
							"pm.test(\"response time less than 2000 ms\", () => {\r",
							"pm.expect(pm.response.responseTime).to.be.below(2000);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "https://reqres.in/api/users/{{userid}}",
					"protocol": "https",
					"host": [
						"reqres",
						"in"
					],
					"path": [
						"api",
						"users",
						"{{userid}}"
					]
				}
			},
			"response": []
		}
	]
}